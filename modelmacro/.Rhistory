z=exp(-gama)
k= 0.7
(1+(1-z)*x/k)^(-k-1)-(1+(1-z/2)*x/k)^(-k-1)
}
model1<- function(t,M,parameters) {
R0<- 2
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(0, 5),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
funF <- function(x){
gama=0.08
z=exp(-gama)
k= 0.7
(1+(1-z)*x/k)^(-k-1)-(1+(1-z/2)*x/k)^(-k-1)
}
model1<- function(t,M,parameters) {
R0<- 1.97
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(0, 5),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
model1<- function(t,M,parameters) {
R0<- 5
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(0, 5),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
model1<- function(t,M,parameters) {
R0<- 10
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(0, 5),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
model1<- function(t,M,parameters) {
R0<- 5
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(0, 5),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
R0<- 6
muH<-1/70
muP<-1/1
m <- M
model1<- function(t,M,parameters) {
R0<- 6
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(0, 5),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
funF <- function(x){
gama=0.08
z=exp(-gama)
k= 0.7
(1+(1-z)*x/k)^(-k-1)-(1+(1-z/2)*x/k)^(-k-1)
}
model1<- function(t,M,parameters) {
R0<- 6
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
model1<- function(t,M,parameters) {
R0<- 5.5
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
model1<- function(t,M,parameters) {
R0<- 5
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
library(knitr)
library(phaseR)
library(deSolve)
library(graphics)
library(captioner)
funF <- function(x){
gama=0.08
z=exp(-gama)
k= 0.7
alpha=0.5
(1+(1-z)*x/k)^(-k-1)-(1+(1-alpha*z)*x/k)^(-k-1)
}
gama=0.08;
z=exp(-gama);
k= 0.7;
alpha=0.5;
mtilde=(k*((1-alpha*z)/(1-z))^(1/(k+2))-k)/((z-1)*((1-alpha*z)/(1-z))^(1/(k+2))+(1-alpha*z));
R0tilde=1/funF(mtilde);
# parameters <- c(
R0c= .5;
R0a= 3;
#                 muH= 1/70,
#                 muP= 1/1,
betac= 1;
betaa= 0.5;
pic= 0.3;
pia= 0.7;
R0=(pic*R0c*betac+pia*R0a*betaa)/(pic*betac+pia*betaa);
example111 <- function(t, y, parameters) {
C<-y[1]
A<-y[2]
#R0c= R0c
#R0a= R0a
muH= 1/70
muP= 1
#betac= 1
#betaa= 0.5
#pic= 0.3
#pia= 0.7
#list(c(y[1]*(3 - y[1] - 2*betac*y[2]), y[2]*(2 - y[1] - y[2])))
#dC <- betac*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*C
#dA <- betaa*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*A
#list(c(y[1]*(3 - y[1] - 2*y[2]), y[1]*(2 - y[1] - y[2])))
list(c(betac*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*C,betaa*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*A))
}
example11_flowField <- flowField(example111,
xlim = c(-1, 10),
ylim = c(-1, 10),
points = 21,
add = FALSE)
example11_nullclines <- nullclines(example111,
xlim = c(-1, 10),
ylim = c(-1, 10),
points = 200)
# parameters <- c(
R0c= 2;
# parameters <- c(
R0c= 2;
R0a= 3;
#                 muH= 1/70,
#                 muP= 1/1,
betac= 1;
betaa= 0.5;
pic= 0.3;
pia= 0.7;
R0=(pic*R0c*betac+pia*R0a*betaa)/(pic*betac+pia*betaa);
example111 <- function(t, y, parameters) {
C<-y[1]
A<-y[2]
#R0c= R0c
#R0a= R0a
muH= 1/70
muP= 1
#betac= 1
#betaa= 0.5
#pic= 0.3
#pia= 0.7
#list(c(y[1]*(3 - y[1] - 2*betac*y[2]), y[2]*(2 - y[1] - y[2])))
#dC <- betac*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*C
#dA <- betaa*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*A
#list(c(y[1]*(3 - y[1] - 2*y[2]), y[1]*(2 - y[1] - y[2])))
list(c(betac*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*C,betaa*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*A))
}
example11_flowField <- flowField(example111,
xlim = c(-1, 10),
ylim = c(-1, 10),
points = 21,
add = FALSE)
example11_nullclines <- nullclines(example111,
xlim = c(-1, 10),
ylim = c(-1, 10),
points = 200)
# parameters <- c(
R0c= 1;
R0a= 3;
#                 muH= 1/70,
#                 muP= 1/1,
betac= 1;
betaa= 0.5;
pic= 0.3;
pia= 0.7;
R0=(pic*R0c*betac+pia*R0a*betaa)/(pic*betac+pia*betaa);
example111 <- function(t, y, parameters) {
C<-y[1]
A<-y[2]
#R0c= R0c
#R0a= R0a
muH= 1/70
muP= 1
#betac= 1
#betaa= 0.5
#pic= 0.3
#pia= 0.7
#list(c(y[1]*(3 - y[1] - 2*betac*y[2]), y[2]*(2 - y[1] - y[2])))
#dC <- betac*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*C
#dA <- betaa*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*A
#list(c(y[1]*(3 - y[1] - 2*y[2]), y[1]*(2 - y[1] - y[2])))
list(c(betac*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*C,betaa*(muH+muP)*(pic*R0c*funF(C)*C+pia*R0a*funF(A)*A)/(pic*betac+pia*betaa)-(muH+muP)*A))
}
example11_flowField <- flowField(example111,
xlim = c(-1, 10),
ylim = c(-1, 10),
points = 21,
add = FALSE)
example11_nullclines <- nullclines(example111,
xlim = c(-1, 10),
ylim = c(-1, 10),
points = 200)
y0 <- matrix(c(1.5, .85, 1.5, 1,
1.75, 1,1.75,0.5,1,0,2,0), 6, 2,
byrow = TRUE)
library(knitr)
library(phaseR)
library(deSolve)
library(graphics)
library(captioner)
funF <- function(x){
gama=0.08
z=exp(-gama)
k= 0.7
(1+(1-z)*x/k)^(-k-1)-(1+(1-z/2)*x/k)^(-k-1)
}
model1<- function(t,M,parameters) {
R0<- 5
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
R0<- 1
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
model1<- function(t,M,parameters) {
R0<- 1
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
funF <- function(x){
gama=0.08
z=exp(-gama)
k= 0.7
(1+(1-z)*x/k)^(-k-1)-(1+(1-z/2)*x/k)^(-k-1)
}
model1<- function(t,M,parameters) {
R0<- 2
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
R0<- 5
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
model1<- function(t,M,parameters) {
R0<- 5
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
model1<- function(t,M,parameters) {
R0<- 6
muH<-1/70
muP<-1/1
m <- M
dM <- (muH+muP)*(R0*funF(m)-1)*m
list(dM)
}
example2_flowField  <- flowField(model1,
xlim = c(0, 20),
ylim = c(-1, 20),
system ="one.dim",
add = FALSE,
xlab = "t", ylab ="M")
grid()
example2_nullclines <- nullclines(model1,
xlim   = c(0, 20),
ylim   = c(0, 20),
system = "one.dim",points = 101, col = c("red","blue" ), add = T,
add.legend = F)
example2_trajectory <- trajectory(model1,
y0 = c(0.5,0.95,1,2,3,5),
tlim = c(0, 20),
system = "one.dim")
source("~/Dropbox/papersGon/modelingmacroparasite/modelmacro/script/bifurcacion.R", echo=TRUE)
